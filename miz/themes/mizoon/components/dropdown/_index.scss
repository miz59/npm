@use "../../../../sass/kernel" as *;
@use "../../../../sass/structure" as *;
@use "sass:map";

$dropdown-box-transition: 0.2s linear;
$dropdown-box-custom-classes: ".bg-secondary-color, .on-secondary-color, .all-border-small, .txt-normal, .border-solid, .border-on-primary-color, .border-width-1";
$dropdown-menu-transition: 0.2s linear;
$dropdown-menu-custom-classes: ".bg-secondary-color, .on-secondary-color, .all-border-small, .txt-normal, .border-solid, .border-on-primary-color, .border-width-1";
$dropdown-menu-item-custom-classes: ".py-1, .px-2, .on-secondary-color, .txt-normal";
$dropdown-menu-item-transition: 0.2s linear;
$dropdown-submenu-toggle-custom-classes: ".py-1, .px-2, .on-secondary-color, .txt-normal";

.dropdown {
    @extend .d-inline-block, .position-relative;
    user-select: none;

    .dropdown-box {
        transition: $dropdown-box-transition;
        @extend .d-flex, .align-items-center, .gap-1, .py-1, .px-2, .pointer, #{$dropdown-box-custom-classes};
    }
    .dropdown-menu {
        transition: $dropdown-menu-transition;
        @extend .position-absolute, .w-100, .opacity-0, .visibility-hidden, .z-index-10, #{$dropdown-menu-custom-classes};

        & > li{
            & > :not(:has(*)){
                transition: $dropdown-menu-item-transition;
                @extend .d-block, #{$dropdown-menu-item-custom-classes};
        
                &:hover{
                    @extend .bg-primary-color, .on-primary-color;
                }
            }
            &:first-child:not(.dropdown-submenu){
                @extend .all-border-small, .all-border-br, .all-border-bl, .overflow-hidden;
            }
            &:last-child:not(.dropdown-submenu){
                @extend .all-border-small, .all-border-tr, .all-border-tl, .overflow-hidden;
            }
            &:first-child.dropdown-submenu > *:not(.dropdown-menu){
                @extend .all-border-small, .all-border-br, .all-border-bl, .overflow-hidden;
            }
            &:last-child.dropdown-submenu > *:not(.dropdown-menu){
                @extend .all-border-small, .all-border-tr, .all-border-tl, .overflow-hidden;
            }
        }
        &:has(> li:only-child){
            @extend .overflow-hidden;
        }
        .dropdown-submenu {
            @extend .position-relative;

            .dropdown-submenu-toggle {
                transition: $dropdown-menu-item-transition;
                @extend .d-flex, .justify-content-space-between, .align-items-center, .w-100, #{$dropdown-submenu-toggle-custom-classes};
                
                &:hover {
                    @extend .bg-primary-color, .on-primary-color;
                }
                i {
                    transition: transform 0.2s linear;
                }
            }
            &.active > .dropdown-submenu-toggle {
                @extend .bg-primary-color, .on-primary-color;
            }
            &.active > .dropdown-menu {
                opacity: 1;
                visibility: visible;
            }
        }
    }
    &.active > .dropdown-menu {
        opacity: 1;
        visibility: visible;
    }
    &.dropdown-bottom > .dropdown-menu , .dropdown-bottom > .dropdown-menu{
        top: 100%;
        bottom: unset;
        right: unset;
        @extend .left-0, .mt-1;
    }
    &.dropdown-top > .dropdown-menu , .dropdown-top > .dropdown-menu{
        top: unset;
        bottom: 100%;
        right: unset;
        @extend .left-0, .mb-1;
    }
    &.dropdown-right > .dropdown-menu , .dropdown-right > .dropdown-menu{
        // top: 0;
        bottom: unset;
        left: 100%;
        right: unset;
        @extend .top-0, .ml-1, .mt-1;
    }
    &.dropdown-left > .dropdown-menu , .dropdown-left > .dropdown-menu{
        bottom: unset;
        left: unset;
        right: 100%;
        @extend .top-0, .mr-1, .mt-1;
    }
    &.dropdown-hover:hover > .dropdown-menu,
    .dropdown-submenu.dropdown-hover:hover > .dropdown-menu {
        opacity: 1;
        @extend .visibility-visible;
    }
}